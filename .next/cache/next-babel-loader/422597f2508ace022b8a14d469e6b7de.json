{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from \"@shopify/polaris\";\nimport store from \"store-js\";\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends Component {\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return /*#__PURE__*/_jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get(\"ids\")\n      },\n      children: ({\n        data,\n        loading,\n        error\n      }) => {\n        if (loading) return /*#__PURE__*/_jsx(\"div\", {\n          children: \"Loading...\"\n        });\n        if (error) return /*#__PURE__*/_jsx(\"div\", {\n          children: error.message\n        });\n        console.log(data);\n        return /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsx(ResourceList, {\n            showHeader: true,\n            resourceName: {\n              singular: \"Product\",\n              plural: \"Products\"\n            },\n            items: data.notes,\n            renderItem: item => {\n              // for each item, render media\n              const media = /*#__PURE__*/_jsx(Thumbnail, {\n                source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : 0,\n                alt: item.images.edges[0] ? item.images.edges[0].node.altText : \"\"\n              }); // and price\n\n\n              const price = item.variants.edges[0].node.price;\n              return /*#__PURE__*/_jsx(ResourceList.Item, {\n                id: item.id,\n                media: media,\n                accessibilityLabel: `View details for ${item.title}`,\n                children: /*#__PURE__*/_jsxs(Stack, {\n                  children: [/*#__PURE__*/_jsx(Stack.Item, {\n                    fill: true,\n                    children: /*#__PURE__*/_jsx(\"h3\", {\n                      children: /*#__PURE__*/_jsx(TextStyle, {\n                        variation: \"strong\",\n                        children: item.title\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Stack.Item, {\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"$$\", price]\n                    })\n                  }), /*#__PURE__*/_jsx(Stack.Item, {\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"Expires on \", twoWeeksFromNow]\n                    })\n                  })]\n                })\n              });\n            }\n          })\n        });\n      }\n    });\n  }\n\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/ulam/skill_up/shopify-sample-app/components/ResourceList.js"],"names":["Component","gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","render","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","notes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport {\n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail\n} from \"@shopify/polaris\";\nimport store from \"store-js\";\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends Component {\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get(\"ids\") }}>\n        {({ data, loading, error }) => {\n          if (loading) return <div>Loading...</div>;\n          if (error) return <div>{error.message}</div>;\n          console.log(data);\n          return (\n            <Card>\n              <ResourceList\n                showHeader\n                resourceName={{ singular: \"Product\", plural: \"Products\" }}\n                items={data.notes}\n                renderItem={item => {\n                  // for each item, render media\n                  const media = (\n                    <Thumbnail\n                      source={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.originalSrc\n                          : 0\n                      }\n                      alt={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.altText\n                          : \"\"\n                      }\n                    />\n                  );\n                  // and price\n                  const price = item.variants.edges[0].node.price;\n                  return (\n                    <ResourceList.Item\n                      id={item.id}\n                      media={media}\n                      accessibilityLabel={`View details for ${item.title}`}\n                    >\n                      <Stack>\n                        <Stack.Item fill>\n                          <h3>\n                            <TextStyle variation='strong'>\n                              {item.title}\n                            </TextStyle>\n                          </h3>\n                        </Stack.Item>\n\n                        <Stack.Item>\n                          <p>$${price}</p>\n                        </Stack.Item>\n\n                        <Stack.Item>\n                          <p>Expires on {twoWeeksFromNow}</p>\n                        </Stack.Item>\n                      </Stack>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}