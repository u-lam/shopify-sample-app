{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport Head from \"next/head\"; // The Polaris app provider component passes down the props and context needed to use the Polaris library. Your app needs to be wrapped in this component to use Polaris.\n\nimport { AppProvider } from \"@shopify/polaris\"; // bridge react helps integrate the app into different interfaces (web, mobile, POS) by passing the API key and shop origin into the component\n\nimport { Provider } from \"@shopify/app-bridge-react\"; // getting polaris styles\n\nimport \"@shopify/polaris/dist/styles.css\"; // Translations are provided in the locales folder. When using Polaris, you are able to import translations from all languages supported by the core Shopify product and consume them through the i18n prop.\n\nimport translations from \"@shopify/polaris/locales/en.json\";\nimport ClientRouter from \"../components/ClientRouter\";\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      shopOrigin\n    } = this.props;\n    const API_KEY = JSON.stringify(process.env.SHOPIFY_API_KEY);\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin,\n      forceRedirect: true\n    };\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(Head, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: \"Sample App\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          charSet: \"utf-8\"\n        })]\n      }), /*#__PURE__*/_jsxs(Provider, {\n        config: config,\n        children: [/*#__PURE__*/_jsx(ClientRouter, {}), /*#__PURE__*/_jsx(AppProvider, {\n          i18n: translations,\n          children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n        })]\n      })]\n    });\n  }\n\n}\n\nMyApp.getInitialProps = async ({\n  ctx\n}) => {\n  return {\n    shopOrigin: ctx.query.shop\n  };\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/ulam/skill_up/shopify-sample-app/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","ClientRouter","MyApp","render","Component","pageProps","shopOrigin","props","API_KEY","JSON","stringify","process","env","SHOPIFY_API_KEY","config","apiKey","forceRedirect","getInitialProps","ctx","query","shop"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,SAASC,QAAT,QAAyB,2BAAzB,C,CACA;;AACA,OAAO,kCAAP,C,CACA;;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACtBO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,UAAMC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAeC,OAAO,CAACC,GAAR,CAAYC,eAA3B,CAAhB;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAEP,OADK;AAEbF,MAAAA,UAFa;AAGbU,MAAAA,aAAa,EAAE;AAHF,KAAf;AAKA,wBACE;AAAA,8BACE,MAAC,IAAD;AAAA,gCACE;AAAA;AAAA,UADF,eAEE;AAAM,UAAA,OAAO,EAAC;AAAd,UAFF;AAAA,QADF,eAKE,MAAC,QAAD;AAAU,QAAA,MAAM,EAAEF,MAAlB;AAAA,gCACE,KAAC,YAAD,KADF,eAEE,KAAC,WAAD;AAAa,UAAA,IAAI,EAAEd,YAAnB;AAAA,iCACE,KAAC,SAAD,oBAAeK,SAAf;AADF,UAFF;AAAA,QALF;AAAA,MADF;AAcD;;AAvBqB;;AA0BxBH,KAAK,CAACe,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC,SAAO;AACLZ,IAAAA,UAAU,EAAEY,GAAG,CAACC,KAAJ,CAAUC;AADjB,GAAP;AAGD,CAJD;;AAMA,eAAelB,KAAf","sourcesContent":["import App from \"next/app\";\nimport Head from \"next/head\";\n// The Polaris app provider component passes down the props and context needed to use the Polaris library. Your app needs to be wrapped in this component to use Polaris.\nimport { AppProvider } from \"@shopify/polaris\";\n// bridge react helps integrate the app into different interfaces (web, mobile, POS) by passing the API key and shop origin into the component\nimport { Provider } from \"@shopify/app-bridge-react\";\n// getting polaris styles\nimport \"@shopify/polaris/dist/styles.css\";\n// Translations are provided in the locales folder. When using Polaris, you are able to import translations from all languages supported by the core Shopify product and consume them through the i18n prop.\nimport translations from \"@shopify/polaris/locales/en.json\";\nimport ClientRouter from \"../components/ClientRouter\";\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, shopOrigin } = this.props;\n    const API_KEY = JSON.stringify(process.env.SHOPIFY_API_KEY);\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin,\n      forceRedirect: true\n    };\n    return (\n      <>\n        <Head>\n          <title>Sample App</title>\n          <meta charSet='utf-8' />\n        </Head>\n        <Provider config={config}>\n          <ClientRouter />\n          <AppProvider i18n={translations}>\n            <Component {...pageProps} />\n          </AppProvider>\n        </Provider>\n      </>\n    );\n  }\n}\n\nMyApp.getInitialProps = async ({ ctx }) => {\n  return {\n    shopOrigin: ctx.query.shop\n  };\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}